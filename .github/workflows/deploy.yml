name: Build, Scan & Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Add permissions for security scanning
permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  security-scan:
    name: Security Scan & Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Validate project structure
      run: |
        echo "‚úÖ Checking required files..."
        test -f Dockerfile && echo "‚úÖ Dockerfile" || exit 1
        test -f railway.json && echo "‚úÖ railway.json" || exit 1
        test -f requirements.txt && echo "‚úÖ requirements.txt" || exit 1
        test -f run.py && echo "‚úÖ run.py" || exit 1
        echo "üöÄ All files present, ready for build"

    # Build Docker image for testing and security scanning
    - name: Build Docker image
      run: |
        docker build -t harchamaq-backend:${{ github.sha }} .
        docker tag harchamaq-backend:${{ github.sha }} harchamaq-backend:latest

    # Test Docker image can start (without external DB connection)
    - name: Test Docker image build
      env:
        FLASK_ENV: testing
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
        ALLOWED_ORIGINS: ${{ vars.ALLOWED_ORIGINS }}
      run: |
        echo "üê≥ Testing container startup..."
        docker run --rm \
          -e FLASK_ENV="testing" \
          -e SECRET_KEY="${SECRET_KEY}" \
          -e JWT_SECRET_KEY="${JWT_SECRET_KEY}" \
          -e ALLOWED_ORIGINS="${ALLOWED_ORIGINS}" \
          harchamaq-backend:${{ github.sha }} \
          python -c "import os; print('‚úÖ Container started successfully'); print('‚úÖ Environment variables loaded')"
        echo "‚úÖ Container test completed successfully"

    # Trivy Security Scan - Filesystem
    - name: Run Trivy filesystem scan
      uses: aquasecurity/trivy-action@master
      continue-on-error: true
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-fs-results.sarif'

    # Trivy Security Scan - Docker Image
    - name: Run Trivy image scan
      uses: aquasecurity/trivy-action@master
      continue-on-error: true
      with:
        image-ref: 'harchamaq-backend:${{ github.sha }}'
        format: 'sarif'
        output: 'trivy-image-results.sarif'

    # Upload Trivy results to GitHub Security tab (only if files exist)
    - name: Upload Trivy filesystem scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always() && hashFiles('trivy-fs-results.sarif') != ''
      continue-on-error: true
      with:
        sarif_file: 'trivy-fs-results.sarif'
    
    - name: Upload Trivy image scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always() && hashFiles('trivy-image-results.sarif') != ''
      continue-on-error: true
      with:
        sarif_file: 'trivy-image-results.sarif'

  deploy:
    name: Deploy to Railway
    needs: security-scan
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install Railway CLI
      run: npm install -g @railway/cli

    - name: Deploy to Railway (Docker)
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
      run: railway up --detach